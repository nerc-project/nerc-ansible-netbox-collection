#!/bin/bash

DEBUG=${DEBUG:-"false"}
BACKUP_DIR=${BACKUP_DIR:-{{ netbox_prefix }}/backups}
BACKUP_ROTATE=${BACKUP_ROTATE:-120}
AWSCLI_CREDS=${AWSCLI_CREDS:-"$HOME/.aws/credentials"}
S3_ENDPOINT=${S3_ENDPOINT:-"{{ vault_s3_endpoint_url }}"}
S3_BUCKET_URI=${S3_BUCKET_URI:-"{{ netbox_s3_bucket_uri }}"}

[[ "${DEBUG}" =~ (1|true) ]] && set -x

function retention() {
  backups_to_delete=$(find "${BACKUP_DIR}" -type f | sort -rn | tail -n +$((${BACKUP_ROTATE} + 1)))
  echo ">>> Running retention (rotate: ${BACKUP_ROTATE})"
  for f in $backups_to_delete; do
    echo "removing ${f}"
    rm -f "${f}"
  done
}

function sync_s3_to_backups_dir() {
  echo ">>> Syncing ${S3_BUCKET_URI} to ${BACKUP_DIR} (endpoint: ${S3_ENDPOINT})"
  podman run --net host --rm -v $BACKUP_DIR:$BACKUP_DIR:rw,Z -v /root/.aws:/root/.aws:ro,Z docker://amazon/aws-cli s3 sync "${S3_BUCKET_URI}" "${BACKUP_DIR}"
}

function sync_backups_to_s3() {
  echo ">>> Syncing ${BACKUP_DIR} to ${S3_BUCKET_URI} (endpoint: ${S3_ENDPOINT})"
  podman run --net host --rm -v $BACKUP_DIR:$BACKUP_DIR:ro,Z -v /root/.aws:/root/.aws:ro,Z docker://amazon/aws-cli s3 sync --delete "${BACKUP_DIR}" "${S3_BUCKET_URI}"
}


function exit_error() {
  echo $1 1>&2
  exit 1
}

function validate_input() {
  if [ ! -d "${BACKUP_DIR}" ]; then
    exit_error "BACKUP_DIR does not exist: ${BACKUP_DIR}"
  fi
  if [ ! -f "${AWSCLI_CREDS}" ]; then
    exit_error "AWSCLI_CREDS does not exist: ${AWSCLI_CREDS}"
  fi
}

function backup_netbox() {
  timestamp=$(date +%Y%m%d%H%M%S)
  echo ">>> Backing up Netbox Postgres DB"
  podman exec {{ netbox_name }}-postgres sh -c 'PGPASSWORD=$(cat /run/secrets/db_password) pg_dump -h {{ netbox_name }}-postgres -U $POSTGRES_USER $POSTGRES_DB' > $BACKUP_DIR/$timestamp.netbox-postgres.sql
  echo ">>> Backing up Netbox Media Files"
  cd {{ netbox_prefix }}; tar cfz $BACKUP_DIR/$timestamp.netbox-media.tar.gz media
}

function main() {
  sync_s3_to_backups_dir
  validate_input
  backup_netbox
  retention
  sync_backups_to_s3
}

main
